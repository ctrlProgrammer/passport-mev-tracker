{"version":3,"sources":["assets/images/Meter.svg","assets/images/Binance.svg","assets/images/Voltswap.png","assets/images/Pancake.svg","core/helpers/utils.ts","components/pages/main.tsx","components/app.tsx","serviceWorker.ts","index.tsx"],"names":["UtilsHelpers","number","isNaN","Number","parseInt","toString","console","log","wei","NaN","Math","pow","id","MeterLogo","BinanceLogo","amount","dec","stringf","i","decimals","VoltswapLogo","PancakeSwapLogo","timeInSeconds","minutes","hours","days","toFixed","miliseconds","money","Intl","NumberFormat","format","array","randomIndex","currentIndex","length","floor","random","files","validType","isValid","validated","j","type","maxSize","size","n","d","Networks","PossibleRouters","RPCUrls","Routers","PossibleTokens","BaseToken","Tokens","address","stablePath","inversePath","Routes","from","to","fromDex","toDex","token","UniSwapV2","provider","network","router","contract","tokens","lastPrices","baseTokenBalance","this","_updateBaseBalance","a","storageAmount","sessionStorage","getItem","allTokens","Object","keys","prices","methods","getAmountsOut","Web3","utils","toWei","call","amountsOut","Array","isArray","fromWei","String","path","amountIn","_getAmountsOut","out","total","buyAmount","getDecimalsUnit","sellAmount","MainPage","props","setItem","state","RPCs","providers","routersAddresses","routers","registers","buyingAmount","tracks","_loadProviders","networks","HttpProvider","setState","_createRouters","networkRouters","eth","Contract","UniswapV2Abi","abi","_startInterval","setInterval","simulateBuy","getBaseTokenBalance","posibleBuyAmount","posibleBuy","simulateSell","posibleSell","newTracks","splice","USDAmount","buyGetAmount","sellGetAmount","success","value","JSON","stringify","Fragment","className","htmlFor","name","placeholder","onChange","e","_updateBuyingAmount","target","map","track","index","getBlockchainName","React","PureComponent","App","contractLoading","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.32c26c18.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Meter.3212cb66.svg\";","export default __webpack_public_path__ + \"static/media/Binance.e30239a6.svg\";","export default __webpack_public_path__ + \"static/media/Voltswap.9f4986dd.png\";","export default __webpack_public_path__ + \"static/media/Pancake.1bd21d5d.svg\";","import MeterLogo from \"../../assets/images/Meter.svg\";\nimport BinanceLogo from \"../../assets/images/Binance.svg\";\nimport VoltswapLogo from \"../../assets/images/Voltswap.png\";\nimport PancakeSwapLogo from \"../../assets/images/Pancake.svg\";\n\nexport class UtilsHelpers {\n  static toHexadecimal(number: string) {\n    if (!isNaN(Number(number))) return parseInt(number, 16).toString();\n    else console.log(\"[UTILS] To Hexadecimal error.\");\n  }\n\n  static normalizeWei(wei: string) {\n    return !isNaN(Number(wei)) ? Number(wei) / Math.pow(10, 18) : NaN;\n  }\n\n  static getBlockChainIcon(id: string) {\n    switch (id) {\n      case \"82\":\n        return MeterLogo;\n      case \"56\":\n        return BinanceLogo;\n    }\n  }\n\n  static strtodec(amount: string, dec: number) {\n    let stringf = \"\";\n    for (var i = 0; i < dec; i++) stringf = stringf + \"0\";\n    return amount + stringf;\n  }\n\n  static getDecimalsUnit(decimals: number) {\n    switch (decimals) {\n      case 0:\n        return \"ether\";\n      case 9:\n        return \"gwei\";\n      case 18:\n        return \"wei\";\n    }\n  }\n\n  static getBlockchainName(id: string) {\n    switch (id) {\n      case \"82\":\n        return \"meter\";\n      case \"56\":\n        return \"binance\";\n      case \"137\":\n        return \"polygon\";\n    }\n  }\n\n  static getDEXLogo(id: string) {\n    switch (id) {\n      case \"voltswap\":\n        return VoltswapLogo;\n      case \"pancake\":\n        return PancakeSwapLogo;\n    }\n  }\n\n  static parseSeconds(timeInSeconds: number) {\n    const minutes = timeInSeconds / 60;\n    const hours = minutes / 60;\n    const days = hours / 24;\n\n    return timeInSeconds < 60\n      ? timeInSeconds.toFixed() + \" Seconds\"\n      : minutes < 60\n      ? minutes.toFixed() + \" Minutes\"\n      : hours < 48\n      ? hours.toFixed() + \" Hours\"\n      : days.toFixed() + \" Days\";\n  }\n\n  static timestampToHours(miliseconds: number) {\n    return (miliseconds / 1000 / 60 / 60).toFixed(1);\n  }\n\n  static parseMoney(money: number) {\n    return Intl.NumberFormat().format(money);\n  }\n\n  static shuffle(array: any[]) {\n    let currentIndex = array.length,\n      randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  static validateFiles(files: File[], validType: string[]) {\n    let isValid = true;\n\n    for (let i = 0; i < files.length; i++) {\n      let validated = false;\n\n      for (let j = 0; j < validType.length; j++) {\n        if (files[i].type === validType[j]) {\n          validated = true;\n          break;\n        }\n      }\n\n      if (validated === false) {\n        isValid = false;\n        break;\n      }\n    }\n\n    return isValid;\n  }\n\n  static validateFilesSize(files: File[], maxSize: number) {\n    let isValid = true;\n\n    for (let i = 0; i < files.length; i++) {\n      if (files[i].size > maxSize) {\n        isValid = false;\n        break;\n      }\n    }\n\n    return isValid;\n  }\n\n  static formatBigNumbers(n: number) {\n    if (n < 1e3) return n;\n    if (n >= 1e3 && n < 1e6) return +(n / 1e3).toFixed(1) + \"K\";\n    if (n >= 1e6 && n < 1e9) return +(n / 1e6).toFixed(1) + \"M\";\n    if (n >= 1e9 && n < 1e12) return +(n / 1e9).toFixed(1) + \"B\";\n    if (n >= 1e12) return +(n / 1e12).toFixed(1) + \"T\";\n  }\n\n  static fixWithoutRounding(n: number, d: number) {\n    return (Math.floor(n * Math.pow(10, d)) / Math.pow(10, d)).toFixed(d);\n  }\n}\n","import Web3 from \"web3\";\nimport React from \"react\";\n\nimport UniswapV2Abi from \"../../assets/contracts/IUniswapV2Router.json\";\n\nimport { UtilsHelpers } from \"../../core/helpers/utils\";\n\nconst Networks = {\n  POLYGON: \"137\",\n  METER: \"82\",\n  BSC: \"56\",\n};\n\nconst PossibleRouters = {\n  QUICKSWAP: \"quickswap\",\n  VOLTSWAP: \"voltswap\",\n  PANCAKE: \"pancake\",\n};\n\nconst RPCUrls = {\n  [Networks.POLYGON]: \"https://polygon-mainnet.g.alchemy.com/v2/IfBbeQVlWjzJGdhHsO_q3y7TvCgAg9aM\",\n  [Networks.METER]: \"https://rpc-meter.jellypool.xyz\",\n  [Networks.BSC]: \"https://bsc-dataseed.binance.org\",\n};\n\nconst Routers = {\n  [Networks.POLYGON]: {\n    [PossibleRouters.QUICKSWAP]: \"0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff\",\n  },\n  [Networks.METER]: {\n    [PossibleRouters.VOLTSWAP]: \"0xC6E88363ea74F31f514b56E979413B3Ee8d76f39\",\n  },\n  [Networks.BSC]: {\n    [PossibleRouters.PANCAKE]: \"0x10ED43C718714eb63d5aA57B78B54704E256024E\",\n  },\n};\n\nconst PossibleTokens = {\n  FTB: \"FTB\",\n  BUSD: \"BUSD\",\n  DAI: \"DAI\",\n  MATIC: \"MATIC\",\n  MTRG: \"MTRG\",\n  AMPL: \"AMPL\",\n  MOVR: \"MOVR\",\n};\n\nconst BaseToken = {\n  [Networks.POLYGON]: \"0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063\",\n  [Networks.METER]: \"0x24aa189dfaa76c671c279262f94434770f557c35\",\n  [Networks.BSC]: \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n};\n\nconst Tokens = {\n  [Networks.POLYGON]: {\n    [PossibleRouters.QUICKSWAP]: {\n      [PossibleTokens.FTB]: {\n        address: \"0xf305012ea754252184f1071c86ae99fac5b40320\",\n        stablePath: [\n          \"0xf305012ea754252184f1071c86ae99fac5b40320\",\n          \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\",\n          BaseToken[Networks.POLYGON],\n        ],\n        inversePath: [\n          BaseToken[Networks.POLYGON],\n          \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\",\n          \"0xf305012ea754252184f1071c86ae99fac5b40320\",\n        ],\n        decimals: 18,\n      },\n    },\n  },\n  [Networks.METER]: {\n    [PossibleRouters.VOLTSWAP]: {\n      [PossibleTokens.FTB]: {\n        address: \"0x6cfe9adad5215195c1aa9755daed29360e6ab986\",\n        stablePath: [\n          \"0x6cfe9adad5215195c1aa9755daed29360e6ab986\",\n          \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\",\n          BaseToken[Networks.METER],\n        ],\n        inversePath: [\n          BaseToken[Networks.METER],\n          \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\",\n          \"0x6cfe9adad5215195c1aa9755daed29360e6ab986\",\n        ],\n        decimals: 18,\n      },\n      [PossibleTokens.MTRG]: {\n        address: \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\",\n        stablePath: [\"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\", BaseToken[Networks.METER]],\n        inversePath: [BaseToken[Networks.METER], \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\"],\n        decimals: 18,\n      },\n      [PossibleTokens.AMPL]: {\n        address: \"0x1cf09d1b5da9d9d24365d87b932a7c4bd018a419\",\n        stablePath: [\n          \"0x1cf09d1b5da9d9d24365d87b932a7c4bd018a419\",\n          \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\",\n          BaseToken[Networks.METER],\n        ],\n        inversePath: [\n          BaseToken[Networks.METER],\n          \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\",\n          \"0x1cf09d1b5da9d9d24365d87b932a7c4bd018a419\",\n        ],\n        decimals: 9,\n      },\n      [PossibleTokens.MOVR]: {\n        address: \"0xb158870beB809Ad955Bf56065C5C10D7Fd957cC0\",\n        stablePath: [\n          \"0xb158870beB809Ad955Bf56065C5C10D7Fd957cC0\",\n          \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\",\n          BaseToken[Networks.METER],\n        ],\n        inversePath: [\n          BaseToken[Networks.METER],\n          \"0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3\",\n          \"0xb158870beB809Ad955Bf56065C5C10D7Fd957cC0\",\n        ],\n        decimals: 9,\n      },\n    },\n  },\n  [Networks.BSC]: {\n    [PossibleRouters.PANCAKE]: {\n      [PossibleTokens.MTRG]: {\n        address: \"0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F\",\n        stablePath: [\"0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F\", BaseToken[Networks.BSC]],\n        inversePath: [BaseToken[Networks.BSC], \"0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F\"],\n        decimals: 18,\n      },\n      [PossibleTokens.AMPL]: {\n        address: \"0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F\",\n        stablePath: [\n          \"0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F\",\n          \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n          BaseToken[Networks.BSC],\n        ],\n        inversePath: [\n          BaseToken[Networks.BSC],\n          \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n          \"0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F\",\n        ],\n        decimals: 9,\n      },\n    },\n  },\n};\n\nconst Routes = [\n  {\n    from: Networks.METER,\n    to: Networks.BSC,\n    fromDex: PossibleRouters.VOLTSWAP,\n    toDex: PossibleRouters.PANCAKE,\n    token: PossibleTokens.MTRG,\n  },\n  {\n    from: Networks.BSC,\n    to: Networks.METER,\n    fromDex: PossibleRouters.PANCAKE,\n    toDex: PossibleRouters.VOLTSWAP,\n    token: PossibleTokens.MTRG,\n  },\n  {\n    from: Networks.METER,\n    to: Networks.POLYGON,\n    fromDex: PossibleRouters.VOLTSWAP,\n    toDex: PossibleRouters.QUICKSWAP,\n    token: PossibleTokens.FTB,\n  },\n  {\n    from: Networks.POLYGON,\n    to: Networks.METER,\n    fromDex: PossibleRouters.QUICKSWAP,\n    toDex: PossibleRouters.VOLTSWAP,\n    token: PossibleTokens.FTB,\n  },\n  {\n    from: Networks.METER,\n    to: Networks.BSC,\n    fromDex: PossibleRouters.VOLTSWAP,\n    toDex: PossibleRouters.PANCAKE,\n    token: PossibleTokens.AMPL,\n  },\n  {\n    from: Networks.BSC,\n    to: Networks.METER,\n    fromDex: PossibleRouters.PANCAKE,\n    toDex: PossibleRouters.VOLTSWAP,\n    token: PossibleTokens.AMPL,\n  },\n];\n\ninterface RouterTrack {\n  from: string;\n  to: string;\n  fromDex: string;\n  toDex: string;\n  USDAmount: number;\n  buyAmount: number;\n  buyGetAmount: number;\n  sellAmount: number;\n  sellGetAmount: number;\n  success: boolean;\n  token: string;\n}\n\ninterface MainComponentProps {}\n\nclass UniSwapV2 {\n  lastPrices = {};\n  baseTokenBalance = 0;\n  provider: any = null;\n  network: any = null;\n  router: any = null;\n  contract: any = null;\n  tokens: any = null;\n\n  constructor(provider: any, network: any, router: any, contract: any, tokens: any) {\n    this.provider = provider;\n    this.network = network;\n    this.router = router;\n    this.contract = contract;\n    this.tokens = tokens;\n    this._updateBaseBalance();\n  }\n\n  async _updateBaseBalance() {\n    const storageAmount = sessionStorage.getItem(\"passport-tracker-amount\");\n    if (storageAmount && !Number.isNaN(storageAmount)) this.baseTokenBalance = Number(storageAmount);\n  }\n\n  async _updatePrices() {\n    const allTokens = this.tokens ? Object.keys(this.tokens) : [];\n    const prices: any = {};\n\n    if (allTokens.length > 0) {\n      for (let i = 0; i < allTokens.length; i++) {\n        const amountsOut = await this.contract.methods\n          .getAmountsOut(Web3.utils.toWei(\"1\", \"ether\"), this.tokens[allTokens[i]].stablePath)\n          .call();\n\n        if (Array.isArray(amountsOut)) {\n          prices[allTokens[i]] = Web3.utils.fromWei(\n            String(amountsOut[this.tokens[allTokens[i]].stablePath.length - 1]),\n            \"ether\"\n          );\n        }\n      }\n\n      this.lastPrices = prices;\n    }\n  }\n\n  async _getAmountsOut(path: [any], amountIn: string) {\n    try {\n      return await this.contract.methods.getAmountsOut(amountIn, path).call();\n    } catch (error) {\n      console.log(\"Invalid buy amount\");\n      return [];\n    }\n  }\n\n  async getBaseTokenBalance() {\n    await this._updateBaseBalance();\n    return this.baseTokenBalance;\n  }\n\n  async simulateBuy(token: string, amount: number) {\n    const out = await this._getAmountsOut(this.tokens[token].inversePath, Web3.utils.toWei(amount.toString(), \"ether\"));\n\n    if (Array.isArray(out) && out.length > 0) {\n      let total = Number(Web3.utils.fromWei(String(out[out.length - 1]), \"ether\"));\n      let buyAmount = Number(Web3.utils.fromWei(String(out[0]), \"ether\"));\n      total = total * Math.pow(10, 18 - this.tokens[token].decimals);\n      // console.log(\"Finish buy simulation using \" + token + \" with \" + amount + \" USD = \" + total + \" \" + token);\n      return { total, buyAmount };\n    } else return 0;\n  }\n\n  async simulateSell(token: string, amount: number) {\n    const out = await this._getAmountsOut(\n      this.tokens[token].stablePath,\n      Web3.utils.toWei(\n        amount.toFixed(18 - this.tokens[token].decimals).toString(),\n        UtilsHelpers.getDecimalsUnit(18 - this.tokens[token].decimals)\n      )\n    );\n\n    if (Array.isArray(out) && out.length > 0) {\n      let total = Number(Web3.utils.fromWei(String(out[out.length - 1]), \"ether\"));\n      let sellAmount = Number(Web3.utils.fromWei(String(out[0]), \"ether\"));\n      sellAmount = sellAmount * Math.pow(10, 18 - this.tokens[token].decimals);\n      // console.log(\"Finish sell simulation using \" + token + \" with \" + amount + \" \" + token + \" = \" + total + \" USD\");\n      return { total, sellAmount };\n    } else return 0;\n  }\n}\n\ninterface MainComponentState {\n  RPCs: any;\n  providers: any;\n  routersAddresses: any;\n  routers: any;\n  tokens: any;\n  registers: any;\n  buyingAmount: string;\n  tracks: RouterTrack[];\n}\n\nexport class MainPage extends React.PureComponent<MainComponentProps, MainComponentState> {\n  constructor(props: MainComponentProps) {\n    super(props);\n\n    sessionStorage.setItem(\"passport-tracker-amount\", \"100\");\n\n    this.state = {\n      RPCs: RPCUrls,\n      providers: {},\n      routersAddresses: Routers,\n      routers: {},\n      tokens: Tokens,\n      registers: {},\n      buyingAmount: \"100\",\n      tracks: [],\n    };\n  }\n\n  componentDidMount() {\n    this._loadProviders();\n  }\n\n  private _loadProviders() {\n    const providers: any = {};\n    const networks = Object.keys(this.state.RPCs);\n\n    for (let i = 0; i < networks.length; i++) {\n      providers[networks[i]] = new Web3(new Web3.providers.HttpProvider(this.state.RPCs[networks[i]]));\n    }\n\n    this.setState({ providers }, () => this._createRouters());\n  }\n\n  private _createRouters() {\n    const routers: any = {};\n    const networks = Object.keys(this.state.RPCs);\n\n    for (let i = 0; i < networks.length; i++) {\n      const network = networks[i];\n      const networkRouters = Object.keys(this.state.routersAddresses[network]);\n\n      if (networkRouters.length > 0) {\n        routers[network] = {};\n\n        for (let i = 0; i < networkRouters.length; i++) {\n          routers[network][networkRouters[i]] = new UniSwapV2(\n            this.state.providers[network],\n            network,\n            networkRouters[i],\n            new this.state.providers[network].eth.Contract(\n              UniswapV2Abi.abi,\n              this.state.routersAddresses[network][networkRouters[i]]\n            ),\n            this.state.tokens[network][networkRouters[i]]\n          );\n        }\n      }\n    }\n\n    this.setState({ routers }, () => {\n      this._startInterval();\n    });\n  }\n\n  private _startInterval() {\n    setInterval(async () => {\n      // console.log(\"Searching posible transfers\");\n\n      try {\n        for (let i = 0; i < Routes.length; i++) {\n          if (this.state.routers[Routes[i].from][Routes[i].fromDex].simulateBuy) {\n            const posibleBuyAmount = await this.state.routers[Routes[i].from][Routes[i].fromDex].getBaseTokenBalance();\n\n            // console.log(\n            //   \"Buy simulation on \" +\n            //     Routes[i].from +\n            //     \" using \" +\n            //     Routes[i].fromDex +\n            //     \" with \" +\n            //     posibleBuyAmount +\n            //     \" USD\"\n            // );\n\n            const posibleBuy = await this.state.routers[Routes[i].from][Routes[i].fromDex].simulateBuy(\n              Routes[i].token,\n              posibleBuyAmount\n            );\n\n            // console.log(\"Sell simulation on \" + Routes[i].to + \" using \" + Routes[i].toDex);\n\n            const posibleSell = await this.state.routers[Routes[i].from][Routes[i].fromDex].simulateSell(\n              Routes[i].token,\n              posibleBuy.total\n            );\n\n            const newTracks = this.state.tracks;\n\n            if (newTracks.length > Routes.length - 1) newTracks.splice(0, 1);\n\n            if (posibleBuyAmount >= posibleSell.total) {\n              // console.log(\n              //   \"Failed emulation (\" +\n              //     Routes[i].token +\n              //     \"), invalid bridge transfer. Buy \" +\n              //     posibleBuyAmount +\n              //     \" USD, earn \" +\n              //     posibleSell.total +\n              //     \" USD, estimated loss \" +\n              //     (posibleSell.total - posibleBuyAmount) +\n              //     \" USD\"\n              // );\n\n              this.setState({\n                tracks: [\n                  ...newTracks,\n                  {\n                    from: Routes[i].from,\n                    to: Routes[i].to,\n                    fromDex: Routes[i].fromDex,\n                    toDex: Routes[i].toDex,\n                    USDAmount: posibleBuyAmount,\n                    buyAmount: posibleBuy.buyAmount,\n                    buyGetAmount: posibleBuy.total,\n                    sellAmount: posibleSell.sellAmount,\n                    sellGetAmount: posibleSell.total,\n                    success: false,\n                    token: Routes[i].token,\n                  },\n                ],\n              });\n            } else {\n              // console.log(\n              //   \"Success emulation (\" +\n              //     Routes[i].token +\n              //     \"), valid bridge transfer. Buy \" +\n              //     posibleBuyAmount +\n              //     \" USD, earn \" +\n              //     posibleSell +\n              //     \" USD, estimated earnings \" +\n              //     (posibleSell - posibleBuyAmount) +\n              //     \" USD\"\n              // );\n\n              this.setState({\n                tracks: [\n                  ...newTracks,\n                  {\n                    from: Routes[i].from,\n                    to: Routes[i].to,\n                    fromDex: Routes[i].fromDex,\n                    toDex: Routes[i].toDex,\n                    USDAmount: posibleBuyAmount,\n                    buyAmount: posibleBuy.buyAmount,\n                    buyGetAmount: posibleBuy.total,\n                    sellAmount: posibleSell.sellAmount,\n                    sellGetAmount: posibleSell.total,\n                    success: true,\n                    token: Routes[i].token,\n                  },\n                ],\n              });\n            }\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }, 5000);\n  }\n\n  private _updateBuyingAmount(value: string) {\n    this.setState({ buyingAmount: value }, () => {\n      sessionStorage.setItem(\"passport-tracker-amount\", JSON.stringify(Number(this.state.buyingAmount) || 0));\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"ct-mev-container\">\n          <h4>Passport MEV tracker</h4>\n          <div className=\"ct-buy-amount\">\n            <label htmlFor=\"amount\">USD</label>\n            <input\n              type=\"text\"\n              name=\"amount\"\n              placeholder=\"Simulate buy amount $USD\"\n              value={this.state.buyingAmount}\n              onChange={(e) => this._updateBuyingAmount(e.target.value)}\n            />\n            <span className=\"fas fa-sync\"></span>\n          </div>\n        </div>\n        <div className=\"ct-track-list\">\n          <div className=\"ct-top\">\n            <div className=\"ct-buy\">buy on</div>\n            <div>buy $USD</div>\n            <div>buy $token</div>\n            <div className=\"ct-buy\">sell on</div>\n            <div>sell $token</div>\n            <div>sell $USD</div>\n            <div>earnings</div>\n          </div>\n          {this.state.tracks.length > 0\n            ? this.state.tracks.map((track, index) => {\n                return (\n                  <div key={index} className={\"ct-track\" + (track.success ? \" ct-valid\" : \" ct-invalid\")}>\n                    <div className=\"ct-buy\">\n                      <small>{UtilsHelpers.getBlockchainName(track.from)}</small>\n                      <small>{track.fromDex}</small>\n                    </div>\n                    <div>\n                      <small>{track.USDAmount} USD</small>\n                    </div>\n                    <div>\n                      <small>\n                        {Intl.NumberFormat().format(track.buyGetAmount)} {track.token}\n                      </small>\n                    </div>\n                    <div className=\"ct-sell\">\n                      <small>{UtilsHelpers.getBlockchainName(track.to)}</small>\n                      <small>{track.toDex}</small>\n                    </div>\n                    <div>\n                      <small>\n                        {Intl.NumberFormat().format(track.sellAmount)} {track.token}\n                      </small>\n                    </div>\n                    <div>\n                      <small>{Intl.NumberFormat().format(track.sellGetAmount)} USD</small>\n                    </div>\n                    <div>\n                      <small>{Intl.NumberFormat().format(track.sellGetAmount - track.USDAmount)} USD</small>\n                    </div>\n                  </div>\n                );\n              })\n            : \"\"}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MainPage } from \"./pages/main\";\n\ninterface AppComponentProps {}\n\ninterface AppComponentState {}\n\nexport class App extends React.Component<AppComponentProps, AppComponentState> {\n  constructor(props: AppComponentProps) {\n    super(props);\n\n    this.state = {\n      contractLoading: false,\n    };\n  }\n\n  async componentDidMount() {}\n\n  render() {\n    return (\n      <BrowserRouter>\n        <MainPage></MainPage>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./styles.css\";\n\n// console.log = () => {};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}